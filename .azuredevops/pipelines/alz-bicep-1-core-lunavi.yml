name: ALZ-Bicep-1-Core-Lunavi

trigger:
# YAML PR triggers are supported only in GitHub and Bitbucket Cloud.
# If you use Azure Repos Git, you can configure a branch policy for build validation to trigger your build pipeline for validation.
# https://learn.microsoft.com/en-us/azure/devops/repos/git/branch-policies#build-validation
  branches:
    include:
      - "main"
  paths:
    include:
      - "config/custom-parameters/managementGroups.parameters.all.bicepparam"
      - "config/custom-parameters/resourceGroupLoggingAndSentinel.parameters.all.bicepparam"
      - "config/custom-parameters/logging.parameters.all.bicepparam"
      - "config/custom-parameters/customPolicyDefinitions.parameters.all.bicepparam"
      - "config/custom-parameters/customRoleDefinitions.parameters.all.bicepparam"
      - "config/custom-parameters/mgDiagSettingsAll.parameters.all.bicepparam"
pr:
  branches:
    include:
      - "main"
  paths:
    include:
      - "config/custom-parameters/managementGroups.parameters.all.bicepparam"
      - "config/custom-parameters/resourceGroupLoggingAndSentinel.parameters.all.bicepparam"
      - "config/custom-parameters/logging.parameters.all.bicepparam"
      - "config/custom-parameters/customPolicyDefinitions.parameters.all.bicepparam"
      - "config/custom-parameters/customRoleDefinitions.parameters.all.bicepparam"
      - "config/custom-parameters/mgDiagSettingsAll.parameters.all.bicepparam"

variables:
  ENV_FILE: ".env"
  SERVICE_CONNECTION_NAME: "sp-trapeze-eam"
  IS_PULL_REQUEST: "false"

jobs:
  - job: ALZ_Bicep_1_Core
    pool:
      vmImage: ubuntu-latest
    steps:
      - checkout: self
        displayName: Checkout Repo

      - pwsh: |
          (Get-Content -Path $env:ENV_FILE -Encoding UTF8) | ForEach-Object {$_ -replace '"',''} | Out-File -FilePath $env:ENV_FILE -Encoding UTF8
        displayName: Remove Quotation Marks from Environment File

      - pwsh: |
          Write-Host $env:ENV_FILE
          Get-Content -Path $env:ENV_FILE -Encoding UTF8 | ForEach-Object {
            $envVarName, $envVarValue = ($_ -replace '"','').split('=')
            echo "##vso[task.setvariable variable=$envVarName;]$envVarValue"
            echo "Set $envVarName to $envVarValue]"
          }
        displayName: Import Environment Variables from File

      - pwsh: |
          echo "##vso[task.setvariable variable=IS_PULL_REQUEST;]true"
        condition: eq(variables['Build.Reason'], 'PullRequest')
        displayName: Set IS_PULL_REQUEST Variable to True

      - task: AzurePowerShell@5
        displayName: "Management Groups Deployment"
        inputs:
          azureSubscription: ${{ variables.SERVICE_CONNECTION_NAME }}
          azurePowerShellVersion: "LatestVersion"
          pwsh: true
          ScriptType: "InlineScript"
          Inline: |
            .\pipeline-scripts\Deploy-ALZManagementGroups.ps1 -TemplateParameterFile .\config\custom-parameters\managementGroups.parameters.all.bicepparam

      - task: AzurePowerShell@5
        displayName: "Logging and Sentinel Resource Group Deployment"
        inputs:
          azureSubscription: ${{ variables.SERVICE_CONNECTION_NAME }}
          azurePowerShellVersion: "LatestVersion"
          pwsh: true
          ScriptType: "InlineScript"
          Inline: |
            .\pipeline-scripts\Deploy-ALZLoggingAndSentinelResourceGroup.ps1 -TemplateParameterFile .\config\custom-parameters\resourceGroupLoggingAndSentinel.parameters.all.bicepparam

      - task: AzurePowerShell@5
        displayName: "Logging and Sentinel Deployment"
        inputs:
          azureSubscription: ${{ variables.SERVICE_CONNECTION_NAME }}
          azurePowerShellVersion: "LatestVersion"
          pwsh: true
          ScriptType: "InlineScript"
          Inline: |
            .\pipeline-scripts\Deploy-ALZLoggingAndSentinel.ps1 -TemplateParameterFile .\config\custom-parameters\logging.parameters.all.bicepparam

      - task: AzurePowerShell@5
        displayName: "Custom Policy Definitions Deployment"
        inputs:
          azureSubscription: ${{ variables.SERVICE_CONNECTION_NAME }}
          azurePowerShellVersion: "LatestVersion"
          pwsh: true
          ScriptType: "InlineScript"
          Inline: |
            .\pipeline-scripts\Deploy-ALZCustomPolicyDefinitions.ps1 -TemplateParameterFile .\config\custom-parameters\customPolicyDefinitions.parameters.all.bicepparam

      - task: AzurePowerShell@5
        displayName: "Custom Role Definitions Deployment"
        inputs:
          azureSubscription: ${{ variables.SERVICE_CONNECTION_NAME }}
          azurePowerShellVersion: "LatestVersion"
          pwsh: true
          ScriptType: "InlineScript"
          Inline: |
            .\pipeline-scripts\Deploy-ALZCustomRoleDefinitions.ps1 -TemplateParameterFile .\config\custom-parameters\customRoleDefinitions.parameters.all.bicepparam

      - task: AzurePowerShell@5
        displayName: "Custom Management Group Diagnostic Settings"
        inputs:
          azureSubscription: ${{ variables.SERVICE_CONNECTION_NAME }}
          azurePowerShellVersion: "LatestVersion"
          pwsh: true
          ScriptType: "InlineScript"
          Inline: |
            .\pipeline-scripts\Deploy-ALZMGDiagnosticSettings.ps1 -TemplateParameterFile .\config\custom-parameters\mgDiagSettingsAll.parameters.all.bicepparam

      - task: AzureCLI@2
        displayName: "Deploy AMBA ARM template"
        inputs:
          azureSubscription: ${{ variables.SERVICE_CONNECTION_NAME }}
          scriptType: bash
          scriptLocation: inlineScript
          inlineScript: |
            az deployment mg create \
              --name $(Build.BuildNumber) \
              --template-uri https://raw.githubusercontent.com/Azure/azure-monitor-baseline-alerts/main/patterns/alz/alzArm.json \
              --location $(LOCATION) \
              --management-group-id $(TOP_LEVEL_MG_PREFIX) \
              --parameters 'config/custom-parameters/alzArm.param.json'